- Array & ArrayList & LinkedList
    
    - Array
    
    데이터가 메모리 공간에서 연속적으로 위치하는 자료구조입니다. 
    
    모든 데이터의 타입이 같고, 배열을 처음 할당할 때 배열에 사용되는 메모리 공간을 미리 할당해야한다는 특징이 있다.
    
    - 특정위치 조회 & 수정 & 삭제 & 끝 배열에 추가 ⇒ O(1)
    - 중간에 삽입, 새로운 배열로 이동 ⇒ O(n)
    - ArrayList
    
    내부적으로 배열을 이용하여 요소를 저장하는 자료구조입니다.
    
    배열을 이용하지만 초기에 크기를 선언하지 않아도 되고, 관리하지 않아도 되는게 특징입니다. 또한 중간에 빈 공간을 허용하지 않는다는 것이 특징입니다.
    
    자바에서는 ArrayList의 처음 디폴트 사이즈는 10이고 그 후 필요할 때마다 1.5배씩 늘어난다.
    
    - 특정위치 조회 & 수정 & 끝 배열에 추가 & 삭제 ⇒ O(1)
    - 중간에 삽입 & 삭제 ⇒ O(n)
    - LinkedList
    
    필요할 때마다 메모리를 동적으로 할당하여 데이터를 추가하므로 필요한 데이터 만큼만 사용하는 자료구조 입니다.
    
    - 조회 & 삽입 & 삭제 ⇒ O(n)

- Stack & Queue
    
    두 자료구조 모두 선형 자료구조입니다.
    
    Stack은 가장 마지막에 저장한 데이터를 가장 먼저 꺼내게 되는 LIFO방식의 자료구조입니다.
    
    Queue는 가장 처음에 저장한 데이터를 가장 먼저 꺼내게 되는 FIFO방식의 자료구조입니다.

- Tree
    
    계층적으로 저장된 자료 구조

- Binary Search Tree
    
    왼쪽 서브 트리 ≤ 루트노드 ≤ 오른쪽 서브 트리 순서로 저장되는 트리형 자료구조
    
    탐색 작업을 효율적으로 하기 위한 자료구조
    
- Heap
    
    노드들이 저장하고 있는 키들이 최대 힙, 최소 힙을 만족하는 완전 이진 트리인 자료구조
    
    - 최대 힙 ⇒ 부모노드 ≥ 자식노드
    - 최소 힙 ⇒ 부모노드 ≤ 자식노드